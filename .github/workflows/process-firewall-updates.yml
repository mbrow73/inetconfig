name: 🔄 Process Firewall Rule Updates

on:
  issues:
    types: [opened, edited, reopened]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  update:
    if: contains(github.event.issue.labels.*.name, 'firewall-update-request')
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: 🔎 Validate & Apply Rule Updates
        shell: bash
        run: |
          echo "${{ github.event.issue.body }}" > issue.txt
          python3 .github/scripts/firewall_rule_updater.py "$(cat issue.txt)" > validation_output.txt || VALIDATION_FAILED=1
          if [[ "$VALIDATION_FAILED" == "1" ]]; then
            ERRORS=$(awk '/VALIDATION_ERRORS_START/,/VALIDATION_ERRORS_END/' validation_output.txt | sed '/VALIDATION_ERRORS_START\|VALIDATION_ERRORS_END/d' | sed 's/^/- /')
            {
              echo "### ❌ Firewall Rule Update Validation Failed"
              echo
              echo "**Errors:**"
              echo
              echo "$ERRORS"
              echo
              echo "_Your request was closed. Please correct the above and submit again._"
            } > comment.txt
            gh issue comment ${{ github.event.issue.number }} --body-file comment.txt
            gh issue close ${{ github.event.issue.number }}
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Add steps for PR creation just as in your "add" workflow,
      # using the updated files in firewall-requests/
